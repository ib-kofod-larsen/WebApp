# This is a basic workflow that is manually triggered

name: release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

jobs:

  build_release:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          dotnet restore ./src/ikl.web
          dotnet publish ./src/ikl.web -c Release  -o ./release

      - name: Test
        run: dotnet test ./src/ikl.web -c Release --no-build

      - name: Zip
        run: zip -qr WebApp.zip ./release

      - name: Create Release on github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./WebApp.zip
          asset_name: WebApp.zip
          asset_content_type: application/zip

  deploy_release:
    name: deploy app service
    runs-on: ubuntu-latest
    needs: [build_release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
        # Deploy to Azure Web apps
        #Run dotnet build and publish
      - name: publish
        run: |
          dotnet restore ./src/ikl.web/Server/ikl.web.Server.csproj
          dotnet publish ./src/ikl.web/Server/ikl.web.Server.csproj -c Release -o ./publish

      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ibkofodlarsen
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: ./publish
