@page "/drawings"
@using ikl.web.Shared
@using Microsoft.AspNetCore.WebUtilities
@inject DataService DataService
@inject NavigationManager NavManager
@implements IDisposable
@if (Customer != null)
{
    <MatH2>@Customer.Names[0]</MatH2>
}
<div class="cards">
    @foreach (var drawing in _drawings)
    {
        <DrawingCard Drawing="drawing"/>
    }
</div>

<style>
.cards {
 width: 100%;
display: grid;
grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
grid-auto-rows: auto;
grid-gap: 1rem;
 
}
</style>

    @code{

        public Customer Customer { get; set; }
        private IList<Drawing> _drawings = new List<Drawing>();

        protected override async Task OnInitializedAsync()
        {
            await base.OnInitializedAsync();
            var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
            NavManager.LocationChanged += NavManagerOnLocationChanged;
            Update(uri.Query);
        }

        
        private void NavManagerOnLocationChanged(object sender, LocationChangedEventArgs e)
        {
            var uri = NavManager.ToAbsoluteUri(e.Location);
            Update(uri.Query);
        }

        private void Update(string query)
        {
            var q = QueryHelpers.ParseQuery(query);
            
            if (q.TryGetValue("customerId", out var customerId))
            {
                Customer = DataService.GetCustomer(customerId);
                _drawings = DataService.GetDrawings(customerId);
            }
            StateHasChanged();
        }

        public void Dispose()
        {
            NavManager.LocationChanged -= NavManagerOnLocationChanged;
        }

    }
