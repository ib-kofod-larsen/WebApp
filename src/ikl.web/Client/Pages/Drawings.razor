@page "/drawings/{CustomerId}"
@using ikl.web.Shared
@inject DataService DataService

<h2>@(Customer != null ? string.Join(",", Customer.Names) : "")</h2>
<div class="card-columns">
    @foreach (var item in _drawings)
    {
        <div class="card">
            <!-- set a width on the image otherwise it will expand to full width       -->
            <img class="card-img-top img-fluid" src="@("https://ibkofodlarsen.blob.core.windows.net/thumbnails/" + item.Path)" alt="@(Customer.Names[0] + " - " + item.Title)">
            <div class="card-body">
                <h4 class="card-title">@item.Title</h4>
                <p class="card-text">Ratios: @string.Join(",", item.Ratios)</p>
            </div>
            <div class="card-footer">
                Tags: @string.Join(",", item.Tags)
            </div>
        </div>
    }
</div>
<style>
    @@media (min-width: 576px) {
    .card-columns {
        column-count: 2;
    }
}

@@media (min-width: 768px) {
    .card-columns {
        column-count: 3;
    }
}

@@media (min-width: 992px) {
    .card-columns {
        column-count: 4;
    }
}

@@media (min-width: 1200px) {
    .card-columns {
        column-count: 5;
    }
}
</style>
    @code{

        private string _customerId;
        [Parameter]
        public string CustomerId
        {
            get => _customerId;
            set
            {
                _customerId = value;
                Update();
            }
        }

        [Parameter]
        public Customer Customer { get; set; }
        private IList<Drawing> _drawings = new List<Drawing>();
        private Data _data;
        public Data Data
        {
            get => _data;
            set
            {
                _data = value;
                Update();
            }
        }



        protected override async Task OnInitializedAsync()
        {
            Data = await DataService.GetData();
            await base.OnInitializedAsync();
        }

        private void Update()
        {
            List<Drawing> drawings;
            if (Data == null)
            {
                drawings = new List<Drawing>();
            }
            else
            {
                Customer = Data.Customers.First(c => c.Id == CustomerId);
                drawings = Data.Drawings.Where(d => d.CustomerId == Customer.Id).ToList();
            }
            _drawings = drawings;
        }
    }
